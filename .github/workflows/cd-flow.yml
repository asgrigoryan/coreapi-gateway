name: Java CI/CD with Maven

env:
  JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.11-9/x64
  JAVA_HOME_17_X64: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.11-9/x64

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Get current version from pom.xml
        id: get_version
        run: |
          current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $current_version"
          echo "current_version=$current_version" >> $GITHUB_ENV

      - name: Increment version in pom.xml
        id: increment_version
        run: |
          current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          next_version=$(echo $current_version | awk -F'[.-]' '{print $1"."$2"."$3+1}')
          echo "Current version: $current_version"
          echo "Next version: $next_version"
          mvn versions:set -DnewVersion=$next_version -DgenerateBackupPoms=false
          git config --global user.email ${{ secrets.GIT_EMAIL }}
          git config --global user.name ${{ secrets.GIT_USERNAME }}
          git add pom.xml
          git commit -m "Bump version to $next_version"
          echo "next_version=$next_version" >> $GITHUB_ENV

      - name: Push version update
        run: git push origin HEAD:master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Upload JAR file as artifact
        uses: actions/upload-artifact@v2
        with:
          name: gateway-app
          path: target/*.jar

  verify:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify updated version in pom.xml
        run: mvn help:evaluate -Dexpression=project.version -q -DforceStdout

      - name: Run Spotless check
        run: mvn spotless:check

      - name: Run SpotBugs
        run: mvn spotbugs:check

      - name: Run tests with Maven and generate JaCoCo report
        run: mvn test jacoco:report

      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/site/jacoco

  docker:
    runs-on: ubuntu-latest
    needs: verify
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set Docker image tag
        id: set_docker_tag
        run: |
          if [ -z "${{ env.next_version }}" ]; then
            echo "Error: next_version is not set"
            exit 1
          fi
          echo "docker_tag=${{ secrets.DOCKER_USERNAME }}/coreapi-gateway:${{ env.next_version }}" >> $GITHUB_ENV

      - name: Download JAR file
        uses: actions/download-artifact@v2
        with:
          name: gateway-app
          path: target

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ env.docker_tag }}
            ${{ secrets.DOCKER_USERNAME }}/coreapi-gateway:latest
          load: false
          no-cache: false
          pull: false
