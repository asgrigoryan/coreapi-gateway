name: Java CI/CD with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Get current version from pom.xml
      id: get_version
      run: |
        echo "Current version:"
        mvn help:evaluate -Dexpression=project.version -q -DforceStdout

    - name: Increment version in pom.xml
      id: increment_version
      run: |
        current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        next_version=$(echo $current_version | awk -F'[.-]' '{print $1"."$2"."$3+1}')
        echo "Current version: $current_version"
        echo "Next version: $next_version"
        mvn versions:set -DnewVersion=$next_version -DgenerateBackupPoms=false
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add pom.xml
        git commit -m "Bump version to $next_version"
        git status
        git log --oneline -5
        git push origin HEAD:master
        echo "::set-output name=next_version::$next_version"
        env:
          GITHUB_TOKEN: ${{ secrets.GATEWAY_TOKEN }}

    - name: Verify updated version in pom.xml
      run: |
        mvn help:evaluate -Dexpression=project.version -q -DforceStdout

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Run spotless check
      run: mvn spotless:check

    - name: Run SpotBugs
      run: mvn spotbugs:check

    - name: Run tests with Maven and generate JaCoCo report
      run: mvn test jacoco:report

    - name: Upload JaCoCo report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_PASSWORD}}

    - name: Append version to Docker image tag
      id: append_version
      run: |
        echo "Setting Docker image tag with next version: ${{ steps.increment_version.outputs.next_version }}"
        echo "::set-output name=docker_tag::${{ secrets.DOCKER_USERNAME }}/coreapi-gateway:${{ steps.increment_version.outputs.next_version }}"

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ steps.append_version.outputs.docker_tag }}
          ${{ secrets.DOCKER_USERNAME }}/coreapi-gateway:latest
        load: false
        no-cache: false
        pull: false
