# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI/CD with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Run spotless check
      run: mvn spotless:check
    - name: Run SpotBugs
      run: mvn spotbugs:check
    - name: Run tests with Maven and generate JaCoCo report
      run: mvn test jacoco:report
    - name: Upload JaCoCo report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco

    - name: Configure Git Identity
      run: |
        git config --global user.email ${{secrets.GIT_EMAIL}}
        git config --global user.name ${{secrets.GIT_USERNAME}}
    - name: Prepare release
      run: mvn release:prepare -B
    - name: Perform release
      run: mvn release:perform -B  
    - name: Set up versioning
      id: vars
      run: |
        GIT_SHA=$(git rev-parse --short HEAD)
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "GIT_SHA=${GIT_SHA}" >> $GITHUB_ENV
        echo "VERSION=${VERSION}" >> $GITHUB_ENV    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_PASSWORD}}
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/coreapi-gateway:latest
          ${{ secrets.DOCKER_USERNAME }}/coreapi-gateway:${{ env.VERSION }}
          ${{ secrets.DOCKER_USERNAME }}/coreapi-gateway:${{ env.GIT_SHA }}
